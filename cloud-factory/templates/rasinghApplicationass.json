{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "InstanceType": {
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "g2.2xlarge",
                "g2.8xlarge"
            ],
            "Default": "t2.nano",
            "Description": "Set type of EC2 instance to launch.",
            "Type": "String"
        },
        "MaxSize": {
            "AllowedValues": [
                "0",
                "1",
                "2",
                "3",
                "4"
            ],
            "Default": "1",
            "Description": "Set MinSize and MaxSize to 0 to stop instances. Set it to 1 to start instances.",
            "Type": "Number"
        },
        "MinSize": {
            "AllowedValues": [
                "0",
                "1",
                "2",
                "3",
                "4"
            ],
            "Default": "1",
            "Description": "Set MinSize and MaxSize to 0 to stop instances. Set it to 1 to start instances",
            "Type": "Number"
        }
    },
    "Resources": {
        "rasinghApplicationassASGbce": {
            "Properties": {
                "AvailabilityZones": [
                    "us-east-1b",
                    "us-east-1c",
                    "us-east-1e"
                ],
                "LaunchConfigurationName": {
                    "Ref": "rasinghApplicationassLCbce"
                },
                "LoadBalancerNames": [
                    {
                        "Ref": "rasinghApplicationassELB"
                    }
                ],
                "MaxSize": {
                    "Ref": "MinSize"
                },
                "MinSize": {
                    "Ref": "MaxSize"
                },
                "Tags": [
                    {
                        "Key": "name",
                        "PropagateAtLaunch": true,
                        "Value": "rasinghApplicationass-ASG-zone-bce-instance-"
                    }
                ],
                "VPCZoneIdentifier": [
                    "subnet-c4e4deef",
                    "subnet-1558a563",
                    "subnet-e04ef1dd"
                ]
            },
            "Type": "AWS::AutoScaling::AutoScalingGroup"
        },
        "rasinghApplicationassELB": {
            "Properties": {
                "AccessLoggingPolicy": {
                    "EmitInterval": "5",
                    "Enabled": true,
                    "S3BucketName": "sandbox-dev-bucket",
                    "S3BucketPrefix": "rasingh/load-balancer/475882391631/ass"
                },
                "AppCookieStickinessPolicy": [
                    {
                        "CookieName": "SessionID",
                        "PolicyName": "ASSSession"
                    }
                ],
                "ConnectionDrainingPolicy": {
                    "Enabled": true,
                    "Timeout": "60"
                },
                "CrossZone": "true",
                "HealthCheck": {
                    "HealthyThreshold": "3",
                    "Interval": "10",
                    "Target": "HTTP:8080/",
                    "Timeout": "5",
                    "UnhealthyThreshold": "5"
                },
                "Listeners": [
                    {
                        "InstancePort": "8080",
                        "LoadBalancerPort": "8080",
                        "PolicyNames": [
                            "ASSSession"
                        ],
                        "Protocol": "HTTP"
                    }
                ],
                "Scheme": "internal",
                "SecurityGroups": [
                    {
                        "Ref": "rasinghApplicationassLBSG"
                    }
                ],
                "Subnets": [
                    "subnet-c4e4deef",
                    "subnet-1558a563",
                    "subnet-e04ef1dd"
                ],
                "Tags": [
                    {
                        "Key": "name",
                        "Value": "rasinghApplicationass-LoadBalancer-zone-allzones-instance-None"
                    },
                    {
                        "Key": "env",
                        "Value": "rasingh"
                    },
                    {
                        "Key": "componentType",
                        "Value": "Application"
                    },
                    {
                        "Key": "component",
                        "Value": "ass"
                    },
                    {
                        "Key": "zone",
                        "Value": "allzones"
                    },
                    {
                        "Key": "instance",
                        "Value": "None"
                    },
                    {
                        "Key": "type",
                        "Value": "LoadBalancer"
                    }
                ]
            },
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer"
        },
        "rasinghApplicationassInternalSG": {
            "Properties": {
                "GroupDescription": "Enable communication of cluster ports e.g. For nodes within cluster and replication between clusters.",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "10.221.0.0/16",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "FromPort": 8080,
                        "IpProtocol": "tcp",
                        "SourceSecurityGroupId": {
                            "Fn::GetAtt": [
                                "rasinghApplicationassLBSG",
                                "GroupId"
                            ]
                        },
                        "ToPort": 8080
                    }
                ],
                "VpcId": "vpc-6a80380e"
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "rasinghApplicationassLBSG": {
            "Properties": {
                "GroupDescription": "Enable HTTP access on the inbound port",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "10.221.0.0/16",
                        "FromPort": 8080,
                        "IpProtocol": "tcp",
                        "ToPort": 8080
                    }
                ],
                "VpcId": "vpc-6a80380e"
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "rasinghApplicationassLCbce": {
            "Properties": {
                "EbsOptimized": "false",
                "IamInstanceProfile": "rasingh-MarkLogic-role",
                "ImageId": "ami-a4326fce",
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": "rasingh-MarkLogic",
                "SecurityGroups": [
                    {
                        "Ref": "rasinghApplicationassInternalSG"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "echo '{\"zone\": \"b-c-e\", \"region\": \"us-east-1\", \"component\": \"ass\", \"stack-name\": \"rasinghApplicationass\", \"componentType\": \"Application\", \"env\": \"rasingh\"}' > /etc/instance.conf\n",
                                "echo \"INFO generated /etc/instance.conf\"\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::AutoScaling::LaunchConfiguration"
        }
    }
}